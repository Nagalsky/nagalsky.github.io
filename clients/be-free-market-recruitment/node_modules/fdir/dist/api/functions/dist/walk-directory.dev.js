"use strict";

var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.build = build;

var fs_1 = __importDefault(require("fs"));

var readdirOpts = {
  withFileTypes: true
};

var walkAsync = function walkAsync(state, crawlPath, directoryPath, currentDepth, callback) {
  state.queue.enqueue();
  if (currentDepth <= 0) return state.queue.dequeue(null, state);
  state.visited.push(crawlPath);
  state.counts.directories++; // Perf: Node >= 10 introduced withFileTypes that helps us
  // skip an extra fs.stat call.

  fs_1["default"].readdir(crawlPath || ".", readdirOpts, function (error) {
    var entries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    callback(entries, directoryPath, currentDepth);
    state.queue.dequeue(state.options.suppressErrors ? null : error, state);
  });
};

var walkSync = function walkSync(state, crawlPath, directoryPath, currentDepth, callback) {
  if (currentDepth <= 0) return;
  state.visited.push(crawlPath);
  state.counts.directories++;
  var entries = [];

  try {
    entries = fs_1["default"].readdirSync(crawlPath || ".", readdirOpts);
  } catch (e) {
    if (!state.options.suppressErrors) throw e;
  }

  callback(entries, directoryPath, currentDepth);
};

function build(isSynchronous) {
  return isSynchronous ? walkSync : walkAsync;
}