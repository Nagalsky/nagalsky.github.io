"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "mkdirpManual", {
  enumerable: true,
  get: function get() {
    return _mkdirpManual.mkdirpManual;
  }
});
Object.defineProperty(exports, "mkdirpManualSync", {
  enumerable: true,
  get: function get() {
    return _mkdirpManual.mkdirpManualSync;
  }
});
Object.defineProperty(exports, "mkdirpNative", {
  enumerable: true,
  get: function get() {
    return _mkdirpNative.mkdirpNative;
  }
});
Object.defineProperty(exports, "mkdirpNativeSync", {
  enumerable: true,
  get: function get() {
    return _mkdirpNative.mkdirpNativeSync;
  }
});
Object.defineProperty(exports, "useNative", {
  enumerable: true,
  get: function get() {
    return _useNative.useNative;
  }
});
Object.defineProperty(exports, "useNativeSync", {
  enumerable: true,
  get: function get() {
    return _useNative.useNativeSync;
  }
});
exports.mkdirp = exports.nativeSync = exports["native"] = exports.manualSync = exports.manual = exports.sync = exports.mkdirpSync = void 0;

var _mkdirpManual = require("./mkdirp-manual.js");

var _mkdirpNative = require("./mkdirp-native.js");

var _optsArg = require("./opts-arg.js");

var _pathArg = require("./path-arg.js");

var _useNative = require("./use-native.js");

/* c8 ignore start */

/* c8 ignore stop */
var mkdirpSync = function mkdirpSync(path, opts) {
  path = (0, _pathArg.pathArg)(path);
  var resolved = (0, _optsArg.optsArg)(opts);
  return (0, _useNative.useNativeSync)(resolved) ? (0, _mkdirpNative.mkdirpNativeSync)(path, resolved) : (0, _mkdirpManual.mkdirpManualSync)(path, resolved);
};

exports.mkdirpSync = mkdirpSync;
var sync = mkdirpSync;
exports.sync = sync;
var manual = _mkdirpManual.mkdirpManual;
exports.manual = manual;
var manualSync = _mkdirpManual.mkdirpManualSync;
exports.manualSync = manualSync;
var _native = _mkdirpNative.mkdirpNative;
exports["native"] = _native;
var nativeSync = _mkdirpNative.mkdirpNativeSync;
exports.nativeSync = nativeSync;
var mkdirp = Object.assign(function _callee(path, opts) {
  var resolved;
  return regeneratorRuntime.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          path = (0, _pathArg.pathArg)(path);
          resolved = (0, _optsArg.optsArg)(opts);
          return _context.abrupt("return", (0, _useNative.useNative)(resolved) ? (0, _mkdirpNative.mkdirpNative)(path, resolved) : (0, _mkdirpManual.mkdirpManual)(path, resolved));

        case 3:
        case "end":
          return _context.stop();
      }
    }
  });
}, {
  mkdirpSync: mkdirpSync,
  mkdirpNative: _mkdirpNative.mkdirpNative,
  mkdirpNativeSync: _mkdirpNative.mkdirpNativeSync,
  mkdirpManual: _mkdirpManual.mkdirpManual,
  mkdirpManualSync: _mkdirpManual.mkdirpManualSync,
  sync: mkdirpSync,
  "native": _mkdirpNative.mkdirpNative,
  nativeSync: _mkdirpNative.mkdirpNativeSync,
  manual: _mkdirpManual.mkdirpManual,
  manualSync: _mkdirpManual.mkdirpManualSync,
  useNative: _useNative.useNative,
  useNativeSync: _useNative.useNativeSync
});
exports.mkdirp = mkdirp;