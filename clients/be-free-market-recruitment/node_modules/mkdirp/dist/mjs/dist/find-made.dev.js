"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findMadeSync = exports.findMade = void 0;

var _path = require("path");

var findMade = function findMade(opts, parent, path) {
  return regeneratorRuntime.async(function findMade$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!(path === parent)) {
            _context.next = 2;
            break;
          }

          return _context.abrupt("return");

        case 2:
          return _context.abrupt("return", opts.statAsync(parent).then(function (st) {
            return st.isDirectory() ? path : undefined;
          }, // will fail later
          // will fail later
          function (er) {
            var fer = er;
            return fer && fer.code === 'ENOENT' ? findMade(opts, (0, _path.dirname)(parent), parent) : undefined;
          }));

        case 3:
        case "end":
          return _context.stop();
      }
    }
  });
};

exports.findMade = findMade;

var findMadeSync = function findMadeSync(opts, parent, path) {
  if (path === parent) {
    return undefined;
  }

  try {
    return opts.statSync(parent).isDirectory() ? path : undefined;
  } catch (er) {
    var fer = er;
    return fer && fer.code === 'ENOENT' ? findMadeSync(opts, (0, _path.dirname)(parent), parent) : undefined;
  }
};

exports.findMadeSync = findMadeSync;